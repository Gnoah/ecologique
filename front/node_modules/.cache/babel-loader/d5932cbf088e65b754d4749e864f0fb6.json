{"ast":null,"code":"import _classCallCheck from \"/home/dev/Bureau/simplon/Mon_projet_eco2/ecologique/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dev/Bureau/simplon/Mon_projet_eco2/ecologique/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dev/Bureau/simplon/Mon_projet_eco2/ecologique/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dev/Bureau/simplon/Mon_projet_eco2/ecologique/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dev/Bureau/simplon/Mon_projet_eco2/ecologique/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dev/Bureau/simplon/Mon_projet_eco2/ecologique/front/src/components/layout/Chart.jsx\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\n\nvar ChartsPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChartsPage, _React$Component);\n\n  function ChartsPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChartsPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChartsPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dataLine: {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n        datasets: [{\n          label: \"Deforestation\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(225, 204,230, .3)\",\n          borderColor: \"rgb(205, 130, 158)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(205, 130,1 58)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [65, 59, 80, 81, 56, 55, 40]\n        }, {\n          label: \"Reforestation\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"rgb(35, 26, 136)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(35, 26, 136)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [28, 48, 40, 19, 86, 27, 90]\n        }]\n      }\n    };\n\n    _this.setGradientColor = function (canvas, color) {\n      var ctx = canvas.getContext('2d');\n      var gradient = ctx.createlinearGradient(0, 0, 600, 550);\n    };\n\n    _this.getChartData = function (canvas) {\n      var data = _this.state.data;\n\n      if (data.datasets) {\n        var colors = [\"rgba(184, 185, 210, .3)\", \"rgb(35, 26, 136)\"];\n        data.datasets.foreach(function (set, i) {\n          set.backgroundColor = _this.setGradientColor(canvas, color[i]);\n          set.borderColor = \"white\";\n          set.pointBorderWidth = 2;\n        });\n      }\n\n      return data;\n    };\n\n    return _this;\n  }\n\n  _createClass(ChartsPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        id: \"chart1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Chart of deforestion in the world\"), React.createElement(Line, {\n        data: this.state.dataLine,\n        options: {\n          responsive: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChartsPage;\n}(React.Component);\n\nexport default ChartsPage;","map":{"version":3,"sources":["/home/dev/Bureau/simplon/Mon_projet_eco2/ecologique/front/src/components/layout/Chart.jsx"],"names":["React","Line","MDBContainer","ChartsPage","state","dataLine","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","setGradientColor","canvas","color","ctx","getContext","gradient","createlinearGradient","getChartData","colors","foreach","set","i","responsive","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\n\nclass ChartsPage extends React.Component {\n  state = {\n    dataLine: {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n      datasets: [\n        {\n          label: \"Deforestation\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(225, 204,230, .3)\",\n          borderColor: \"rgb(205, 130, 158)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(205, 130,1 58)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [65, 59, 80, 81, 56, 55, 40]\n        },\n        {\n          label: \"Reforestation\",\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"rgb(35, 26, 136)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(35, 26, 136)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: [28, 48, 40, 19, 86, 27, 90]\n        }\n      ]\n    }\n  };\n  setGradientColor = (canvas, color) => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createlinearGradient(0,0,600,550)\n  }\n\n  getChartData = canvas => {\n    const data = this.state.data;\n    if (data.datasets) {\n      let colors = [\"rgba(184, 185, 210, .3)\",\"rgb(35, 26, 136)\"];\n      data.datasets.foreach((set,i) => {\n        set.backgroundColor = this.setGradientColor(canvas, color[i]);\n        set.borderColor =  \"white\";\n        set.pointBorderWidth = 2;\n      });\n    }\n    return data;\n  }\n\n  render() {\n    return (\n      <div className=\"row\" id=\"chart1\">\n        <MDBContainer >\n          <h3 className=\"mt-5\">Chart of deforestion in the world</h3>\n          <Line data={this.state.dataLine} options={{ responsive: true }} />\n        </MDBContainer>\n        <br/><br/>\n      </div>\n      \n    );\n  }\n}\n\nexport default ChartsPage;"]},"metadata":{},"sourceType":"module"}